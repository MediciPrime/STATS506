---
title: "ProblemSet_5"
author: "Behram Radmanesh"
format: 
  html:
      code-fold: true
      code-tools: true
      embed-resources: true
toc: true
---

[Github Link](https://github.com/MediciPrime/STATS506/tree/main/ProblemSet_5)

## Problem 1 - OOP Programming

### Part A
```{r}
## Create the gcd and lcm function using Rcpp
library(Rcpp)

## Include these functions
sourceCpp("gcd_lcm.cpp")

## Create the 'rational' constructor
setClass("rational",
         contains = "numeric",
         slots = c(
           numerator = "numeric",
           denominator = "numeric"
         ),
         ## check to ensure 0 isn't in denominator
         validity = function(object) {
           if (object@denominator == 0) {
             stop("Denominator cannot be zero.")
           }
           ## check to ensure complex numbers aren't used
           if (is.complex(object@numerator) || is.complex(object@denominator)) {
             stop("Numerator and denominator cannot be complex numbers.")
           }
           TRUE
         })

## 'show' method for clean outputs
setMethod("show", "rational",
          function(object) {
            cat(object@numerator, "/", object@denominator, "\n")
          })

 

## Streamlined 'simplify' method for rational objects
setGeneric("simplify", 
           function(object) standardGeneric("simplify"))

setMethod("simplify", "rational",
          function(object) {
            gcd <- gcd(object@numerator, object@denominator)
            new("rational",
                numerator = object@numerator %/% gcd,
                denominator = object@denominator %/% gcd)
          })

## Create quotient and various dependent arithmetic methods
setGeneric("quotient", 
           function(object, digits = 7) standardGeneric("quotient"))

setMethod("quotient", "rational",
          function(object, digits) {
            result <- object@numerator / object@denominator
            cat(round(result, digits), "\n")
          })

setMethod("+", signature(e1 = "rational", e2 = "rational"),
          function(e1, e2) {
            common_denom <- lcm(e1@denominator, e2@denominator)
            new_numerator <- (e1@numerator * (common_denom / e1@denominator)) +
                             (e2@numerator * (common_denom / e2@denominator))
            new_rational <- new("rational", numerator = new_numerator,
                                denominator = common_denom)
            return(simplify(new_rational))
          })

setMethod("-", signature(e1 = "rational", e2 = "rational"),
          function(e1, e2) {
            common_denom <- lcm(e1@denominator, e2@denominator)
            new_numerator <- (e1@numerator * (common_denom / e1@denominator)) -
                             (e2@numerator * (common_denom / e2@denominator))
            new_rational <- new("rational", numerator = new_numerator,
                                denominator = common_denom)
            return(simplify(new_rational))
          })

setMethod("*", signature(e1 = "rational", e2 = "rational"),
          function(e1, e2) {
            new_numerator <- e1@numerator * e2@numerator
            new_denominator <- e1@denominator * e2@denominator
            new_rational <- new("rational", numerator = new_numerator,
                                denominator = new_denominator)
            return(simplify(new_rational))
          })

setMethod("/", signature(e1 = "rational", e2 = "rational"),
          function(e1, e2) {
            new_numerator <- e1@numerator * e2@denominator
            new_denominator <- e1@denominator * e2@numerator
            new_rational <- new("rational", numerator = new_numerator,
                                denominator = new_denominator)
            return(simplify(new_rational))
          })

```

### Part B
```{r}
#| error: true

# Examples
r1 <- new("rational", numerator = 24, denominator = 6)
r2 <- new("rational", numerator = 7, denominator = 230)
r3 <- new("rational", numerator = 0, denominator = 4)

r1
r3
r1 + r2
r1 - r2
r1 * r2
r1 / r2
r1 + r3
r1 * r3
r2 / r3
quotient(r1)
quotient(r2)
quotient(r2, digits = 3)
quotient(r2, digits = 3.14)
quotient(r2, digits = "avocado")
q2 <- quotient(r2, digits = 3)
q2
quotient(r3)
simplify(r1)
simplify(r2)
simplify(r3)

```


### Part C

```{r}
#| error: true

## Check for Zero in denominator
r4 <- new("rational", numerator = 24, denominator = 0)

## Check for Complex number
r5 <- new("rational", numerator = 2i, denominator = 1)
```


## Problem 2 - plotly

### Part A: Any Change in the Distribution of Genre Of Sales?
```{r}


```











