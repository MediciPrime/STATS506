---
title: "Problem Set 2"
author: "Behram Radmanesh"
format: 
  html:
      code-fold: true
      code-tools: true
toc: true
---

[Github Link](https://github.com/MediciPrime/STATS506/tree/main/ProblemSet_2)

## Problem 1 - Dice Game

This problem asks to create a function that codes for a dice game abiding by the following rules:
- The game uses a 6-sided dice and costs $2 to play per die rolled
- Winning roll requires a 3 or 5; anything else and you lose
- Winning value 3 produces 6 dollars; while value 5 produces 10 dollars

### Loop Implementation

```{r}
## Function takes as input the number of dice rolls to play
loop <- function(num) {
  ## Check if input is numeric
  if (class(num) != class(1)) {
    print("Please Insert A Number")
    break
  }
  
  ## Create player deficit
  winnings = -(2*num)
  ## Simulate 'n'= num Dice Rolls
  rolls <- sample(1:6, num, replace=TRUE)
  
  ## Use for loop to calculate total winnings
  for (i in rolls) {
    ## if 3 is rolled add $6 to the winnings
    if (i == 3) {
      winnings <- winnings + 6
    }
    ## if 5 is rolled add $10 to the winnings
    else if (i == 5) {
      winnings <- winnings + 10
    }
  }
  return(winnings)
}

```

## Vetorized Function Implementation

```{r}
## Function takes as input the number of dice rolls to play
vectorized <- function(num) {
  ## Check if input is numeric
  if (class(num) != class(1)) {
    print("Please Insert A Number")
    break
  }
  
  ## Create player deficit
  deficit = -(2*num)
  
  ## Simulate 'n'= num Dice Rolls
  rolls <- sample(1:6, num, replace=TRUE)
  
  ## create a vector specifying winnings for each roll
  rollWinnings <- c(0, 0, 6, 0, 10, 0)
  
  ## using 'rolls' to index over the 'rollWinnings' vector
  ## sum over all the possible winnings
  winnings <- sum(rollWinnings[rolls])
  
  return(winnings+deficit)
}

```
